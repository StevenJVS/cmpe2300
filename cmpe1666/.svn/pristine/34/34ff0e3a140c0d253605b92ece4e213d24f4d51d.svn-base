//***********************************************************************************
//Program: Thready Color
//Description: Analyzes images using threads
//Date: 04/02/23
//Author: Steven Santiago
//Course: CMPE1666
//Class: CNTA02
//***********************************************************************************
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Threading;
using System.Xml.Linq;

namespace ica15
{
    //create delegate
    public delegate void delvoid(string str, double r, double g, double b);
    public partial class Form1 : Form
    {
        Thread image;//image thread

        public delvoid _delvoid = null;//delegate
        public Form1()
        {
            InitializeComponent();
            _delvoid = new delvoid(status);//set delegate
        }

        private void UI_go_Click(object sender, EventArgs e)
        {
            UI_openfiledialog = new OpenFileDialog();
            if(UI_openfiledialog.ShowDialog () == DialogResult.OK )
            {
                //display starting message to list box
                UI_listbox.Items.Add("Starting...");

                image = new Thread(analyze);//new thread
                image.IsBackground= true;//background thread
                image.Start();//start thread
            }
        }
        private void analyze()
        {
            //sum of pixels and total rgb
            int total= 0;
            int sumred= 0;
            int sumgreen= 0;
            int sumblue= 0;

            Bitmap bm = (Bitmap)Bitmap.FromFile(UI_openfiledialog.FileName);
            for (int x = 0; x < bm.Width; x++)
            {
                for (int y = 0; y < bm.Height; y++)
                {
                    Color pixel = bm.GetPixel(x, y);
                    
                    sumred += pixel.R;
                    sumgreen += pixel.G;
                    sumblue += pixel.B;
                }
            }
            total = sumred+sumgreen+sumblue;
            double R = (sumred / total) * 100;
            double G = (sumgreen / total) * 100;
            double B = (sumblue / total) * 100;

            Invoke(_delvoid, new object[] {UI_openfiledialog.FileName, R, G, B});
        }
        private void status(string str, double r, double g, double b)
        {
            UI_listbox.Items.Add($"(R:{r:f2}%, G:{g:f2}%, B:{b:f2}%) " + UI_openfiledialog.FileName);
            UI_listbox.Items.Add("Done...");
        }
    }
}
